{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to Pi4U\n\n\nPi4U is a HPC framework for Bayesian uncertainty quantification of large scale computational models.\n\n\nModules and algorithms\n\n\nSampling\n\n\nTMCMC\n\n\nABC-Subsim\n\n\nSingle-objective optimization\n\n\nCMAES\n\n\nAmalgam\n\n\nMulti-objective optimization\n\n\nNSGA-II\n\n\nMOCMAES\n\n\nMOEAD\n\n\nImplementations\n\n\nParallel\n\n\nSequential", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-pi4u", 
            "text": "Pi4U is a HPC framework for Bayesian uncertainty quantification of large scale computational models.", 
            "title": "Welcome to Pi4U"
        }, 
        {
            "location": "/#modules-and-algorithms", 
            "text": "", 
            "title": "Modules and algorithms"
        }, 
        {
            "location": "/#sampling", 
            "text": "TMCMC  ABC-Subsim", 
            "title": "Sampling"
        }, 
        {
            "location": "/#single-objective-optimization", 
            "text": "CMAES  Amalgam", 
            "title": "Single-objective optimization"
        }, 
        {
            "location": "/#multi-objective-optimization", 
            "text": "NSGA-II  MOCMAES  MOEAD", 
            "title": "Multi-objective optimization"
        }, 
        {
            "location": "/#implementations", 
            "text": "", 
            "title": "Implementations"
        }, 
        {
            "location": "/#parallel", 
            "text": "", 
            "title": "Parallel"
        }, 
        {
            "location": "/#sequential", 
            "text": "", 
            "title": "Sequential"
        }, 
        {
            "location": "/python/", 
            "text": "Python interface of TMCMC\n\n\nTMCMC\n\n\nThe Python interface of TMCMC is defined as follows:\n\n\ntmcmc(fitfun,dim=2,maxstages=20,popsize=1024,lowerbound=[-6,-6],upperbound=[6,6],id=0):\n\n\n\n\nfitfun: python script name (without the .py extension) that implements the log-likelihood function.\nThe prototype is: fitfun(x, n), where x is a vector of parameter values and n the number of parameters.\n\n\ndim: number of parameters\n\n\nmaxstages: maximum number of stages that can be performed by the TMCMC algorithm\n\n\npopsize: number of samples per stage\n\n\nlowerbound: lower bound for each parameter\n\n\nupperbound: uppoer bound for each parameter\n\n\nid: integer identifier for the specific tmcmc() call. The value is appended to the output files generated by the algorithm.\n\n\n\n\nFitness function\n\n\ndef fitfun0(x,n):\n\n\nPlotting\n\n\nExample\n\n\nInstallation and testing\n\n\n\n\nDownload from github:\n\n\n\n\ngit clone https://github.com/cselab/pi4u.git -b tmcmc\n\n\n\n\nGo to pi4u/src and build the library:\n\n\n\n\ncd pi4u/src; make\n\n\n\n\nGo to demo_python and run demo.py\n\n\n\n\ncd demo; python2.7 demo.py", 
            "title": "Python"
        }, 
        {
            "location": "/python/#python-interface-of-tmcmc", 
            "text": "", 
            "title": "Python interface of TMCMC"
        }, 
        {
            "location": "/python/#tmcmc", 
            "text": "The Python interface of TMCMC is defined as follows:  tmcmc(fitfun,dim=2,maxstages=20,popsize=1024,lowerbound=[-6,-6],upperbound=[6,6],id=0):   fitfun: python script name (without the .py extension) that implements the log-likelihood function.\nThe prototype is: fitfun(x, n), where x is a vector of parameter values and n the number of parameters.  dim: number of parameters  maxstages: maximum number of stages that can be performed by the TMCMC algorithm  popsize: number of samples per stage  lowerbound: lower bound for each parameter  upperbound: uppoer bound for each parameter  id: integer identifier for the specific tmcmc() call. The value is appended to the output files generated by the algorithm.", 
            "title": "TMCMC"
        }, 
        {
            "location": "/python/#fitness-function", 
            "text": "def fitfun0(x,n):", 
            "title": "Fitness function"
        }, 
        {
            "location": "/python/#plotting", 
            "text": "", 
            "title": "Plotting"
        }, 
        {
            "location": "/python/#example", 
            "text": "", 
            "title": "Example"
        }, 
        {
            "location": "/python/#installation-and-testing", 
            "text": "Download from github:   git clone https://github.com/cselab/pi4u.git -b tmcmc   Go to pi4u/src and build the library:   cd pi4u/src; make   Go to demo_python and run demo.py   cd demo; python2.7 demo.py", 
            "title": "Installation and testing"
        }, 
        {
            "location": "/matlab/", 
            "text": "Matlab interface of TMCMC", 
            "title": "Matlab"
        }, 
        {
            "location": "/matlab/#matlab-interface-of-tmcmc", 
            "text": "", 
            "title": "Matlab interface of TMCMC"
        }, 
        {
            "location": "/rlib/", 
            "text": "R interface of TMCMC", 
            "title": "R"
        }, 
        {
            "location": "/rlib/#r-interface-of-tmcmc", 
            "text": "", 
            "title": "R interface of TMCMC"
        }, 
        {
            "location": "/hpc/", 
            "text": "Software layout\n\n\ntorc_lite    # TORC tasking library\npndl         # Parallel numerical differentation library\nengines/      # UQ + OPT algorithms\n    engine_tmcmc # TMCMC\n    engine_cmaes # CMAES\n    ...          #\nABC_SubSim   # ABC Subset simulation algorithm\nAMaLGaM      # Stochastic optimization algorithm", 
            "title": "C/C++"
        }, 
        {
            "location": "/hpc/#software-layout", 
            "text": "torc_lite    # TORC tasking library\npndl         # Parallel numerical differentation library\nengines/      # UQ + OPT algorithms\n    engine_tmcmc # TMCMC\n    engine_cmaes # CMAES\n    ...          #\nABC_SubSim   # ABC Subset simulation algorithm\nAMaLGaM      # Stochastic optimization algorithm", 
            "title": "Software layout"
        }, 
        {
            "location": "/about/", 
            "text": "Pi4U - High Performance UQ+OPT Framework\n\n\nPi4U  is our HPC framework for Bayesian uncertainty quantification of large scale computational models.\n\n\nSoftware\n\n\nThe latest version of the Pi4U framework can be downloaded from here:  pi4u_0.4.1.tar.gz  (22.03.2016)\nPrevious public version: pi4u_0.2.tar.gz \n\n\nAdditional documentation\n\n\nTutorial: (pdf)\n\n\nPoster about Pi4U: (pdf)\n\n\nPresentation at the Europar 2015 conference: (pdf)\n\n\nRelated publications\n\n\nPi4U framework\n\n\n\n\nHadjidoukas P.E., Angelikopoulos P., Papadimitriou C., Koumoutsakos P., Pi4U: A high performance computing framework for Bayesian uncertainty quantification of complex models. J. Comput. Phys., 284:1-21, 2015  (doi) (pdf)\nHadjidoukas P.E., Angelikopoulos P., Kulakova L., Papadimitriou C., Koumoutsakos P., Exploiting Task-Based Parallelism in Bayesian Uncertainty Quantification. EuroPar 2015, LLCS 2015, 9233, 532  (doi) (pdf) \n\n\n\n\nApplications\n\n\n\n\nKulakova L., Angelikopoulos P., Hadjidoukas P. E., Papadimitriou C., Koumoutsakos P., Approximate Bayesian Computation for Granular and Molecular Dynamics Simulations. Proceedings of the Platform for Advanced Scientific Computing Conference PASC'16, 2016 (doi) (pdf)\nHadjidoukas P.E, Angelikopoulos P., Rossinelli D., Alexeev D., Papadimitriou C., Koumoutsakos P., Bayesian uncertainty quantification and propagation for discrete element simulations of granular materials. Comput. Methods Appl. Mech. Engrg., 282:218-238, 2014 (doi) (pdf)\n\n\n\n\nTORC: Task-Based Runtime Library\n\n\n\n\nHadjidoukas P.E., Lappas E., Dimakopoulos V.V: A Runtime Library for Platform-Independent Task Parallelism. PDP 2012: 229-236 (doi)", 
            "title": "About"
        }, 
        {
            "location": "/about/#pi4u-high-performance-uqopt-framework", 
            "text": "Pi4U  is our HPC framework for Bayesian uncertainty quantification of large scale computational models.", 
            "title": "Pi4U - High Performance UQ+OPT Framework"
        }, 
        {
            "location": "/about/#software", 
            "text": "The latest version of the Pi4U framework can be downloaded from here:  pi4u_0.4.1.tar.gz  (22.03.2016)\nPrevious public version: pi4u_0.2.tar.gz", 
            "title": "Software"
        }, 
        {
            "location": "/about/#additional-documentation", 
            "text": "Tutorial: (pdf)  Poster about Pi4U: (pdf)  Presentation at the Europar 2015 conference: (pdf)", 
            "title": "Additional documentation"
        }, 
        {
            "location": "/about/#related-publications", 
            "text": "", 
            "title": "Related publications"
        }, 
        {
            "location": "/about/#pi4u-framework", 
            "text": "Hadjidoukas P.E., Angelikopoulos P., Papadimitriou C., Koumoutsakos P., Pi4U: A high performance computing framework for Bayesian uncertainty quantification of complex models. J. Comput. Phys., 284:1-21, 2015  (doi) (pdf)\nHadjidoukas P.E., Angelikopoulos P., Kulakova L., Papadimitriou C., Koumoutsakos P., Exploiting Task-Based Parallelism in Bayesian Uncertainty Quantification. EuroPar 2015, LLCS 2015, 9233, 532  (doi) (pdf)", 
            "title": "Pi4U framework"
        }, 
        {
            "location": "/about/#applications", 
            "text": "Kulakova L., Angelikopoulos P., Hadjidoukas P. E., Papadimitriou C., Koumoutsakos P., Approximate Bayesian Computation for Granular and Molecular Dynamics Simulations. Proceedings of the Platform for Advanced Scientific Computing Conference PASC'16, 2016 (doi) (pdf)\nHadjidoukas P.E, Angelikopoulos P., Rossinelli D., Alexeev D., Papadimitriou C., Koumoutsakos P., Bayesian uncertainty quantification and propagation for discrete element simulations of granular materials. Comput. Methods Appl. Mech. Engrg., 282:218-238, 2014 (doi) (pdf)", 
            "title": "Applications"
        }, 
        {
            "location": "/about/#torc-task-based-runtime-library", 
            "text": "Hadjidoukas P.E., Lappas E., Dimakopoulos V.V: A Runtime Library for Platform-Independent Task Parallelism. PDP 2012: 229-236 (doi)", 
            "title": "TORC: Task-Based Runtime Library"
        }
    ]
}