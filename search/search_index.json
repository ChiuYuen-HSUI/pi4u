{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to \u03a04U\n\n\n\u03a04U is a high performance framework for Bayesian uncertainty quantification of large scale computational models.\nThe software can be used for the following:\n\n\n\n\n\np(\\vartheta | d) = \\frac{p(d | \\vartheta) p(\\vartheta)}{p(d)}\n\n\n\n\np(\\vartheta | d) = \\frac{p(d | \\vartheta) p(\\vartheta)}{p(d)}\n\n\n\n\n\nwhere \np(d | \\vartheta)\np(d | \\vartheta)\n is the likelihood function", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-4u", 
            "text": "\u03a04U is a high performance framework for Bayesian uncertainty quantification of large scale computational models.\nThe software can be used for the following:   \np(\\vartheta | d) = \\frac{p(d | \\vartheta) p(\\vartheta)}{p(d)}  \np(\\vartheta | d) = \\frac{p(d | \\vartheta) p(\\vartheta)}{p(d)}   where  p(d | \\vartheta) p(d | \\vartheta)  is the likelihood function", 
            "title": "Welcome to \u03a04U"
        }, 
        {
            "location": "/installation/", 
            "text": "INSTALLATION\n\n\nPREREQUISITES\n\n\n\n\nAn MPI implementation must be installed on your system (preferably with full thread safety)\n\n\nGSL-2.4 (http://www.gnu.org/software/gsl/) is required by some engines and must be installed on your system\n\n\n\n\nINSTALLATION STEPS\n\n\n1. Torc library\n\n\nA tasking library that allows to write platform-independent code.\n\nWe assume that the MPI compiler is named mpicc:\n\n\ncd lib/torc_lite  \nautoreconf  \n./configure CC=mpicc --prefix=$HOME/usr/torc  \nmake; make install  \nexport PATH=$HOME/usr/torc/bin:$PATH\n\n\n\nAfter installing torc, the following flags are available:\n\n\ntorc_cflags\n\n\ntorc_libs\n  \n\n\n2. UQ and Optimization Algorithms\n\n\nEnter the \nbuild\n directory:  \n\n\ncd build\n\n\n\nBefore compiling, the following need to be checked: \n- Path to GSL-2.4 inside the \nMakefile\n.\n\n- Name for the MPI compiler in the \nMakefile\n, since this can be named differently on different platforms (e.g. CC=cc on Piz Daint).  \n\n\nCompilation options:\n  \n\n\nbuild the default option (uses use_torc=1):\n\n\nmake\n\n\n\nbuild the OpenMP version:\n\n\nmake use_omp=1\n\n\n\nbuild the TORC-based version:\n\n\nmake use_torc=1\n\n\n\nbuild the serial version:\n\n\nmake use_omp=0 use_torc=0\n\n\n\nTESTING\n\n\nTODO\n\n\nNOTES\n\n\nDo not hesitate to ask for help and report any problems at:\n- chatzidp AT ethz.ch\n- garampat AT ethz.ch", 
            "title": "Installation"
        }, 
        {
            "location": "/installation/#installation", 
            "text": "", 
            "title": "INSTALLATION"
        }, 
        {
            "location": "/installation/#prerequisites", 
            "text": "An MPI implementation must be installed on your system (preferably with full thread safety)  GSL-2.4 (http://www.gnu.org/software/gsl/) is required by some engines and must be installed on your system", 
            "title": "PREREQUISITES"
        }, 
        {
            "location": "/installation/#installation-steps", 
            "text": "", 
            "title": "INSTALLATION STEPS"
        }, 
        {
            "location": "/installation/#1-torc-library", 
            "text": "A tasking library that allows to write platform-independent code. \nWe assume that the MPI compiler is named mpicc:  cd lib/torc_lite  \nautoreconf  \n./configure CC=mpicc --prefix=$HOME/usr/torc  \nmake; make install  \nexport PATH=$HOME/usr/torc/bin:$PATH  After installing torc, the following flags are available:  torc_cflags  torc_libs", 
            "title": "1. Torc library"
        }, 
        {
            "location": "/installation/#2-uq-and-optimization-algorithms", 
            "text": "Enter the  build  directory:    cd build  Before compiling, the following need to be checked: \n- Path to GSL-2.4 inside the  Makefile . \n- Name for the MPI compiler in the  Makefile , since this can be named differently on different platforms (e.g. CC=cc on Piz Daint).    Compilation options:     build the default option (uses use_torc=1):  make  build the OpenMP version:  make use_omp=1  build the TORC-based version:  make use_torc=1  build the serial version:  make use_omp=0 use_torc=0", 
            "title": "2. UQ and Optimization Algorithms"
        }, 
        {
            "location": "/installation/#testing", 
            "text": "TODO", 
            "title": "TESTING"
        }, 
        {
            "location": "/installation/#notes", 
            "text": "Do not hesitate to ask for help and report any problems at:\n- chatzidp AT ethz.ch\n- garampat AT ethz.ch", 
            "title": "NOTES"
        }, 
        {
            "location": "/examples/sampling/", 
            "text": "Sampling the posterior distribution\n\n\nIn this example we will show how to sample the posterior distribution in an uncertainty quantification problem. First, we will create synthetic data using the model,\n$$\nf(t;\\vartheta) = \n$$", 
            "title": "Sampling"
        }, 
        {
            "location": "/examples/sampling/#sampling-the-posterior-distribution", 
            "text": "In this example we will show how to sample the posterior distribution in an uncertainty quantification problem. First, we will create synthetic data using the model,\n$$\nf(t;\\vartheta) = \n$$", 
            "title": "Sampling the posterior distribution"
        }, 
        {
            "location": "/examples/post/", 
            "text": "Bayesian UQ plots\n\n\n\n\nmaltab  \n\n\npython  \n\n\n\n\nOptimization plots\n\n\n\n\nmaltab  \n\n\npython", 
            "title": "Postprocessing"
        }, 
        {
            "location": "/examples/post/#bayesian-uq-plots", 
            "text": "maltab    python", 
            "title": "Bayesian UQ plots"
        }, 
        {
            "location": "/examples/post/#optimization-plots", 
            "text": "maltab    python", 
            "title": "Optimization plots"
        }, 
        {
            "location": "/developing/", 
            "text": "Repository Structure\n\n\nTODO\n\n\nConventions\n\n\nTODO\n\n\nWrite your own likelihood\n\n\nTODO\n\n\nUpcoming\n\n\n\n\nABC-SubSim (xx/xx/2018)  \n\n\nAMaLGaM (xx/xx/2018)  \n\n\nMulti-objective optimization (xx/xx/2018)  \n\n\nManifold TMCMC (xx/xx/2018)  \n\n\n\n\nBeta\n\n\n\n\npython interface\n\n\nmatlab interface", 
            "title": "Developing"
        }, 
        {
            "location": "/developing/#repository-structure", 
            "text": "TODO", 
            "title": "Repository Structure"
        }, 
        {
            "location": "/developing/#conventions", 
            "text": "TODO", 
            "title": "Conventions"
        }, 
        {
            "location": "/developing/#write-your-own-likelihood", 
            "text": "TODO", 
            "title": "Write your own likelihood"
        }, 
        {
            "location": "/developing/#upcoming", 
            "text": "ABC-SubSim (xx/xx/2018)    AMaLGaM (xx/xx/2018)    Multi-objective optimization (xx/xx/2018)    Manifold TMCMC (xx/xx/2018)", 
            "title": "Upcoming"
        }, 
        {
            "location": "/developing/#beta", 
            "text": "python interface  matlab interface", 
            "title": "Beta"
        }, 
        {
            "location": "/hpc/", 
            "text": "TODO", 
            "title": "Performance and Scalability"
        }, 
        {
            "location": "/references/", 
            "text": "Related publications\n\n\nPi4U framework\n\n\n\n\nHadjidoukas P.E., Angelikopoulos P., Papadimitriou C., Koumoutsakos P., Pi4U: A high performance computing framework for Bayesian uncertainty quantification of complex models. J. Comput. Phys., 284:1-21, 2015\n(\ndoi\n,\npdf\n)\n\n\nHadjidoukas P.E., Angelikopoulos P., Kulakova L., Papadimitriou C., Koumoutsakos P., Exploiting Task-Based Parallelism in Bayesian Uncertainty Quantification. EuroPar 2015, LLCS 2015, 9233, 532\n(\ndoi\n,\npdf\n)\n\n\n\n\nApplications\n\n\n\n\n\n\nKulakova L., Angelikopoulos P., Hadjidoukas P. E., Papadimitriou C., Koumoutsakos P., Approximate Bayesian Computation for Granular and Molecular Dynamics Simulations. Proceedings of the Platform for Advanced Scientific Computing Conference PASC'16, 2016\n(\ndoi\n, \npdf\n)\n\n\n\n\n\n\nHadjidoukas P.E, Angelikopoulos P., Rossinelli D., Alexeev D., Papadimitriou C., Koumoutsakos P., Bayesian uncertainty quantification and propagation for discrete element simulations of granular materials. Comput. Methods Appl. Mech. Engrg., 282:218-238, 2014\n(\ndoi\n,\npdf\n)\n\n\n\n\n\n\nTORC: Task-Based Runtime Library\n\n\n\n\nHadjidoukas P.E., Lappas E., Dimakopoulos V.V: A Runtime Library for Platform-Independent Task Parallelism. PDP 2012: 229-236\n(\ndoi\n)", 
            "title": "References"
        }, 
        {
            "location": "/references/#related-publications", 
            "text": "", 
            "title": "Related publications"
        }, 
        {
            "location": "/references/#pi4u-framework", 
            "text": "Hadjidoukas P.E., Angelikopoulos P., Papadimitriou C., Koumoutsakos P., Pi4U: A high performance computing framework for Bayesian uncertainty quantification of complex models. J. Comput. Phys., 284:1-21, 2015\n( doi , pdf )  Hadjidoukas P.E., Angelikopoulos P., Kulakova L., Papadimitriou C., Koumoutsakos P., Exploiting Task-Based Parallelism in Bayesian Uncertainty Quantification. EuroPar 2015, LLCS 2015, 9233, 532\n( doi , pdf )", 
            "title": "Pi4U framework"
        }, 
        {
            "location": "/references/#applications", 
            "text": "Kulakova L., Angelikopoulos P., Hadjidoukas P. E., Papadimitriou C., Koumoutsakos P., Approximate Bayesian Computation for Granular and Molecular Dynamics Simulations. Proceedings of the Platform for Advanced Scientific Computing Conference PASC'16, 2016\n( doi ,  pdf )    Hadjidoukas P.E, Angelikopoulos P., Rossinelli D., Alexeev D., Papadimitriou C., Koumoutsakos P., Bayesian uncertainty quantification and propagation for discrete element simulations of granular materials. Comput. Methods Appl. Mech. Engrg., 282:218-238, 2014\n( doi , pdf )", 
            "title": "Applications"
        }, 
        {
            "location": "/references/#torc-task-based-runtime-library", 
            "text": "Hadjidoukas P.E., Lappas E., Dimakopoulos V.V: A Runtime Library for Platform-Independent Task Parallelism. PDP 2012: 229-236\n( doi )", 
            "title": "TORC: Task-Based Runtime Library"
        }
    ]
}